; 4      4 4     4     4       length length length
; length n pos_1 pos_i pos_ans _1     i      ans
def ffactorial
  init:
    check_size 8 ; input: length, n
  init_positions:
    extend 12 ; pos_1, pos_i, pos_ans
    set 4 20 #8 ; pos_1
    add 4 #8 #0 #12 ; pos_i
    add 4 #12 #0 #16 ; pos_ans
  init_data:
    extend $0
    set $0 2 #$8 ; _1 = 2
    neg $0 #$8 #$8 ; _1 = -2
    extend $0
    set $0 0 #$12 ; i = 0
    set 4 #4 #$12 ; i = n

    extend $0
    set $0 1 #$16 ; ans = 1
  loop:
    mult $0 #$12 #$16 #$16 ; ans = i * ans
    add $0 #$12 #$8 #$12 ; i = i - 2
    branch :gt $0 #$12 0 :loop
  finish:
    set $0 #$16 #4
    shrink $0
    shrink $0
    shrink 16
    extend 4
    add 4 #0 8 #-4
    check_size $-4 ;output
    shrink 4
